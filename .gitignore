# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints
*.ipynb_checkpoints/

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# VS Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Google Cloud / GCP
.gcloud/
*.json.key
service-account-key.json
credentials.json
application_default_credentials.json

# Vertex AI / ML specific
models/
checkpoints/
mlruns/
outputs/
logs/
*.h5
*.pkl
*.joblib
*.ckpt
*.pth
*.pt
*.safetensors

# Data files (customize based on your needs)
data/
*.csv
*.parquet
*.feather
*.xlsx
*.xls
# Keep sample data
!data/sample/
!data/examples/

# Secrets and API keys
.env.local
.env.production
.env.*.local
secrets/
*.key
*.pem
*.cert

# Temporary files
tmp/
temp/
*.tmp
*.bak
*.swp
*.swo
*~

# Archives
*.zip
*.tar
*.tar.gz
*.rar
*.7z

# Database
*.db
*.sqlite
*.sqlite3

# Node.js (if using any JavaScript tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Custom / Project specific
.cache/
*.backup
workspace/
sandbox/

# Keep important files
!.gitkeep
!README.md
!requirements.txt
!setup.py
!pyproject.toml

# ===== ADK Finance Agent Specific =====

# DART & ECOS Data Files (Sensitive Financial Data)
adk-finance-agent/dart_analytics/CORPCODE.xml
adk-finance-agent/dart_analytics/CORPCODE.zip
adk-finance-agent/dart_analytics/storage/corpcode.db
adk-finance-agent/dart_analytics/storage/corpcode_cache.pkl
adk-finance-agent/dart_analytics/storage/corpcode_index.json
adk-finance-agent/dart_analytics/storage/sessions.json

# Downloaded Financial Documents (May contain sensitive info)
adk-finance-agent/downloads/
adk-finance-agent/*/downloads/

# ADK Generated Files
.adk/
adk-cache/
*.adk

# Financial Data Cache
financial_cache/
market_data/
company_data/

# Jupyter Notebook Outputs (May contain API responses)
*-checkpoint.ipynb

# Google ADK Web UI Files
.adk_web/
adk_web_cache/

# Large Data Files
*.xml.gz
*.xml.bz2
*.jsonl
*.ndjson

# Korean Finance API specific
dart_reports/
ecos_data/
financial_statements/

# ===== Security & Compliance =====

# API Keys & Credentials (Critical for Korean Finance APIs)
.env*
!.env.example
dart_api_key.txt
ecos_api_key.txt
api_credentials/
credentials/

# Korean Financial Data Compliance
personal_data/
sensitive_financial_data/
compliance_logs/

# Session & Authentication Tokens
*.token
auth_cache/
session_cache/

# ===== Development & Testing =====

# Testing artifacts
test_data/
test_outputs/
mock_data/
!test_data/sample/
!test_data/examples/

# Development databases
dev.db
test.db
local.db

# Performance & Profiling
profile_results/
*.prof
benchmark_results/

# ===== Documentation & Generated Content =====

# Auto-generated documentation
auto_docs/
api_docs/
generated_docs/

# Large documentation files
GEMINI.md
DETAILED_DOCS.md
API_SPECIFICATIONS.md

# Keep essential documentation
!README.md
!adk-finance-agent/README.md
!*/README.md

# ===== OS & Editor Specific (Enhanced) =====

# macOS Extended
*.icloud
.fseventsd/
.hotfiles.btree

# Windows Extended  
*.lnk
Desktop.ini

# Linux Extended
.directory
*.desktop

# JetBrains IDEs (Enhanced)
.idea/
*.iml
*.ipr
*.iws
.run/

# VS Code (Enhanced)
.vscode/
*.code-workspace
.history/
.ionide/

# ===== Language & Framework Specific =====

# Python Enhanced
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual Environments (Enhanced)
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.python-version
pyvenv.cfg

# Package Managers
pip-log.txt
pip-delete-this-directory.txt
Pipfile.lock
poetry.lock
pdm.lock
.pdm.toml

# ===== Keep Essential Files =====
!.gitkeep
!.gitignore
!LICENSE
!CONTRIBUTING.md
!CHANGELOG.md
!requirements.txt
!setup.py
!pyproject.toml
!Dockerfile
!docker-compose.yml